from aiogram import Router, types
from aiogram.filters.command import Command

from data_access_layer.repositories.user_repository import UserRepository
from models.user import UserDTO
from keyboards.reply_kbs import main_kb
from utils.config_reader import config

router = Router()

async def register_user(user_id):
    user = UserDTO(telegram_id=user_id)
    await UserRepository.create(user)

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    if message.from_user.id != config.admin_id:
        await message.answer("–ë–æ—Ç –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞.")
        await message.answer("–î—Ä—É–≥–∏–º –∞–Ω–æ–Ω–∏–º—É—Å–∞–º –ø—Ä–∏–¥–µ—Ç—Å—è –ø–æ–¥–æ–∂–¥–∞—Ç—åü§∑‚Äç‚ôÇÔ∏è")
    else:
        user_id = message.from_user.id
        if await UserRepository.is_user_exists(user_id):
            message_text = '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –µ—Å—Ç—å –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –±–æ—Ç–∞.'
        else:
            await register_user(user_id)
            message_text = '–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ'

        await message.answer(text=message_text, reply_markup=main_kb(message.from_user.id))